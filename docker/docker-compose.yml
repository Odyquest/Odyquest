version: "3.4"

services:
  web:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./public:/var/www/html
      #- ./conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/nginx/ssl
      - ./certbot/data:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - keycloak
      - data-backend
## comment in for letsencrypt certificates
#  certbot:
#    image: certbot/certbot:latest
#    command: certonly --webroot --webroot-path=/var/www/certbot --expand --allow-subset-of-names -d DOMAIN1 -d DOMAIN2 ...
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/logs:/var/log/letsencrypt
#      - ./certbot/data:/var/www/certbot


  app-cms-frontend:
    restart: always
    image: localhost:5000/odyquest-frontend:production
    container_name: app-cms-frontend
    volumes:
      - ./configuration.json:/usr/share/nginx/html/app/en/assets-shared/configuration/configuration.json
      - ./configuration.json:/usr/share/nginx/html/app/de/assets-shared/configuration/configuration.json
      - ./configuration.json:/usr/share/nginx/html/cms/assets-shared/configuration/configuration.json
    networks:
      - default


  data-backend:
    restart: always
    image: localhost:5000/odyquest-data-backend:production
    container_name: data-backend
    environment:
      ODYQUEST_CORS_ORIGIN: "https://app.example.com"
      ODYQUEST_MONGODB_URL: "mongodb://data-mongodb:27017/production"
      ODYQUEST_API_PORT: "80"
      ODYQUEST_AUTH_ISSUER_BASE_URL: "https://auth.example.com/auth/realms/master"
      ODYQUEST_AUTH_JWKS_URL: "https://auth.example.com/auth/realms/master/protocol/openid-connect/certs"
    networks:
      - default
      - data-database
  data-mongodb:
    image: mongo:latest
    container_name: data-mongodb
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - data-database


  keycloak-postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      # TODO POSTGRES_PASSWORD: super_secret_password
    networks:
      - keycloak-database
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      # TODO DB_PASSWORD: super_secret_password
      KEYCLOAK_USER: admin
      # TODO KEYCLOAK_PASSWORD: "SUPER_SECRET"
      PROXY_ADDRESS_FORWARDING: "true"
      REDIRECT_SOCKET: "proxy-https"
    depends_on:
      - keycloak-postgres
    networks:
      - default
      - keycloak-database


volumes:
  postgres_data:
      driver: local
  mongodb_data_container:

networks:
  data-database:
  keycloak-database:

