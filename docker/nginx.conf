events {
}
http {
  server {
    server_name app.example.com;

    listen 80;
    location / {
      return 301 https://app.example.com;
    }

    location /.well-known/acme-challenge {
      root /var/www/certbot;
    }
  }
  server {
    server_name app.example.com;
    listen 443 ssl http2;

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client

    ssl_certificate /etc/nginx/ssl/live/app.example.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/app.example.com/privkey.pem;

    ssl_protocols TLSv1.2;
    ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers On;
    ssl_session_cache shared:SSL:128m;
    add_header Strict-Transport-Security "max-age=31557600";
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
      proxy_pass http://app-cms-frontend;
    }
  }

  server {
    server_name api.example.com;

    listen 80;
    location / {
      return 301 https://api.example.com;
    }

    location /.well-known/acme-challenge {
      root /var/www/certbot;
    }
  }
  server {
    server_name api.example.com;
    listen 443 ssl http2;

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client

    ssl_certificate /etc/nginx/ssl/live/app.example.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/app.example.com/privkey.pem;

    ssl_protocols TLSv1.2;
    ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers On;
    ssl_session_cache shared:SSL:128m;
    add_header Strict-Transport-Security "max-age=31557600";
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
      proxy_pass http://data-backend;
    }

    location /.well-known/acme-challenge {
      root /var/www/certbot;
    }
  }

  server {
    server_name auth.example.com;
    listen 80;

    location / {
      return 301 https://auth.example.com;
    }

    location /.well-known/acme-challenge {
      root /var/www/certbot;
    }
  }
  server {
    server_name auth.example.com;
    listen 443 ssl http2;

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client

    ssl_certificate /etc/nginx/ssl/live/app.example.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/app.example.com/privkey.pem;

    ssl_protocols TLSv1.2;
    ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers On;
    ssl_session_cache shared:SSL:128m;
    add_header Strict-Transport-Security "max-age=31557600";
    ssl_stapling on;
    ssl_stapling_verify on;

    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;

    location / {
      proxy_pass http://keycloak:8080;
    }

    location /.well-known/acme-challenge {
      root /var/www/certbot;
    }
  }
}

